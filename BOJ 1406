#include<bits/stdc++.h>
using namespace std;

struct node{

    struct node* prev;
    char c = '0';
    struct node* next;
};

struct node* head;
struct node* current;

void AddNode(char newC){

    struct node* newNode = (struct node*)malloc(sizeof(struct node));
    newNode->c = newC;
    newNode->next = current->next;
    newNode->prev = current;
    current->next = newNode;
    current = newNode;
}


void L(){

    if(current->prev == NULL) return;
    current = current->prev;
}

void D(){

    if(current->next == NULL) return;
    current = current->next;
}

void B(){

    if(current->prev == NULL) return;
    current = current->prev;
    current->next = current->next->next;
}

void P(char c){

    AddNode(c);
}

void Print(){

    struct node* temp = head;
    while(temp->next!=NULL){

        cout<<temp->next->c;
        temp = temp->next;
    }
}


int main(){

    head = (struct node*)malloc(sizeof(struct node));
    head->prev = NULL;
    head->next = NULL;
    current = head;

    string s;
    cin>>s;
    for(int i=0;i<s.length();i++){

        AddNode(s[i]);
    }
    int n;
    cin>>n;
    while(n--){

        char tmpc;
        cin>>tmpc;
        if(tmpc == 'L') L();
        else if(tmpc == 'D') D();
        else if(tmpc == 'B') B();
        else if(tmpc == 'P'){

            char tmpcc;
            cin>>tmpcc;
            P(tmpcc);
        }
    }

    Print();
    

}

